<?xml version="1.0" encoding="UTF-8"?><sqlb_project><db path="/Users/jvonderhoff/Desktop/FantasyFootball/2024/prod_2024.db" readonly="0" foreign_keys="1" case_sensitive_like="0" temp_store="0" wal_autocheckpoint="1000" synchronous="2"/><attached/><window><main_tabs open="structure browser pragmas query" current="0"/></window><tab_structure><column_width id="0" width="300"/><column_width id="1" width="0"/><column_width id="2" width="100"/><column_width id="3" width="431"/><column_width id="4" width="0"/><expanded_item id="0" parent="1"/><expanded_item id="1" parent="1"/><expanded_item id="2" parent="1"/><expanded_item id="3" parent="1"/></tab_structure><tab_browse><current_table name="4,7:mainplayers"/><default_encoding codec=""/><browse_table_settings><table schema="main" name="player" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort/><column_widths><column index="1" value="56"/><column index="2" value="138"/><column index="3" value="51"/><column index="4" value="39"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table></browse_table_settings></tab_browse><tab_sql><sql name="SQL 1">SELECT * FROM Players_QB;

SELECT FirstName || '  ' || LastName AS FullName
FROM DKlineups730;

ALTER TABLE DKlineups
ADD COLUMN FullName TEXT;

UPDATE DKlineups
SET FullName = Fn || ' ' || Ln;

SELECT DKlineups730.FullName, Players_QB.Player 
FROM DKlineups730 
INNER JOIN Players_QB 
ON DKlineups730.FullName = Players_QB.Player;


ALTER TABLE DKlineups730
ADD COLUMN Position TEXT;


SELECT *
FROM DKlineups
LEFT JOIN DKRanks 
ON DKlineups730.FullName = DKRanks.Name;

SELECT DKlineups.LineupId, DKRanks.Name, DKRanks.Position, DKRanks.Team, DKRanks.Adp, DKRanks.Rank, DKRanks.Wk17
FROM DKlineups
LEFT JOIN DKRanks 
ON DKlineups.FullName = DKRanks.Name;


SELECT DKlineups.LineupId, DKlineups.FullName
FROM DKlineups
LEFT JOIN DKRanks 
ON DKlineups.FullName = DKRanks.Name
WHERE DKRanks.Name IS NULL;

-- insert rows into DkRanks table
INSERT INTO DKRanks (Id, Name, Position, Adp, Team, Wk17, PRk, Rookie, Rank, &quot;+/-&quot;)
VALUES
 (5555557, 'Josh Reynolds', 'WR', 999, 'DET', 'DAL', 999,NULL, 999, 99),
 (5555558, 'Chris Moore', 'WR', 999, 'TEN', 'HOU', 999,NULL, 999, 99),
 (5555559, 'Tyler Scott', 'WR', 999, 'CHI', 'ATL', 999,NULL, 999, 99),
 (5555550, 'Nelson Agholor', 'WR', 999, 'BAL', 'MIA', 999,NULL, 999, 99),
 (5555551, 'Cole Turner', 'TE', 999, 'WAS', 'SF', 999,NULL, 999, 99),
 (5555552, 'Justin Watson', 'WR', 999, 'KC', 'CIN', 999,NULL, 999, 99),
 (5555553, 'Noah Gray', 'TE', 999, 'KC', 'CIN', 999,NULL, 999, 99),
 (5555554, 'Rico Dowdle', 'RB', 999, 'DAL', 'DET', 999,NULL, 999, 99),
 (5555545, 'Myles Gaskin', 'RB', 999, 'MIN', 'GB', 999,NULL, 999, 99),
 (5555565, 'Robert Tonyan', 'TE', 999, 'CHI', 'GB', 999,NULL, 999, 99),
 (5555575, 'Zack Moss', 'RB', 999, 'IND', 'LV', 999,NULL, 999, 99),
 (5555585, 'Stetson Bennett', 'QB', 999, 'LA', 'NYG', 999,NULL, 999, 99),
 (5555595, 'Matt Breida', 'RB', 999, 'NYG', 'LA', 999,NULL, 999, 99),
 (5555515, 'Dontayvion Wicks', 'WR', 999, 'GB', 'MIN', 999,NULL, 999, 99) ;

-- Finds all the Jalen Hurts stacks - need to update to allow to search of any QB and find match of teams
SELECT DKlineups.LineupId, DKRanks.Name, DKRanks.Position, DKRanks.Team, DKRanks.Adp, DKRanks.Rank, DKRanks.Wk17
FROM DKlineups
LEFT JOIN DKRanks ON DKlineups.FullName = DKRanks.Name
WHERE DKlineups.LineupId IN (
    SELECT DKlineups.LineupId
    FROM DKlineups
    LEFT JOIN DKRanks ON DKlineups.FullName = DKRanks.Name
    WHERE DKRanks.Name = 'Jalen Hurts'
) AND DKRanks.Team = 'PHI'
ORDER BY DKlineups.LineupId ASC;

--Finds all the qb and combination of players that aren't even on same team (all combination of QB and non qb)
SELECT QBs.LineupId, QBs.Name AS QBName, QBs.Team AS QBTeam, NonQBs.Name AS NonQBName, NonQBs.Team AS NonQBTeam
FROM
  (SELECT DKlineups.LineupId, DKRanks.Name, DKRanks.Team
  FROM DKlineups
  JOIN DKRanks ON DKlineups.FullName = DKRanks.Name
  WHERE DKRanks.Position = 'QB') AS QBs
JOIN
  (SELECT DKlineups.LineupId, DKRanks.Name, DKRanks.Team
  FROM DKlineups
  JOIN DKRanks ON DKlineups.FullName = DKRanks.Name
  WHERE DKRanks.Position &lt;&gt; 'QB') AS NonQBs
ON QBs.LineupId = NonQBs.LineupId;

--- Finds all the stacks 
SELECT QBs.LineupId, QBs.Name AS QBName, QBs.Team AS QBTeam, NonQBs.Name AS NonQBName, NonQBs.Team AS NonQBTeam
FROM
  (SELECT DKlineups.LineupId, DKRanks.Name, DKRanks.Team
  FROM DKlineups
  JOIN DKRanks ON DKlineups.FullName = DKRanks.Name
  WHERE DKRanks.Position = 'QB') AS QBs
JOIN
  (SELECT DKlineups.LineupId, DKRanks.Name, DKRanks.Team
  FROM DKlineups
  JOIN DKRanks ON DKlineups.FullName = DKRanks.Name
  WHERE DKRanks.Position &lt;&gt; 'QB') AS NonQBs
ON QBs.LineupId = NonQBs.LineupId AND QBs.Team = NonQBs.Team
ORDER BY QBs.LineupId ASC;


SELECT QBs.LineupId, QBs.Name AS QBName, QBs.Team AS QBTeam, NonQBs.Name AS NonQBName, NonQBs.Team AS NonQBTeam, COUNT(*) AS PairCount
FROM
  (SELECT DKlineups.LineupId, DKRanks.Name
  FROM DKlineups
  JOIN DKRanks ON DKlineups.FullName = DKRanks.Name
  WHERE DKRanks.Position = 'QB') AS QBs
JOIN
  (SELECT DKlineups.LineupId, DKRanks.Name
  FROM DKlineups
  JOIN DKRanks ON DKlineups.FullName = DKRanks.Name
  WHERE DKRanks.Position &lt;&gt; 'QB') AS NonQBs
ON QBs.LineupId = NonQBs.LineupId AND QBs.Team = NonQBs.Team
GROUP BY QBs.Name, NonQBs.Name
order by PairCount DESC;


SELECT QBs.LineupId, QBs.Name AS QBName, NonQBs.Name AS NonQBName, NonQBs.Team AS Team, COUNT(*) AS PairCount
FROM
  (SELECT DKlineups.LineupId, DKRanks.Name, DKRanks.Team
  FROM DKlineups
  JOIN DKRanks ON DKlineups.FullName = DKRanks.Name
  WHERE DKRanks.Position = 'QB') AS QBs
JOIN
  (SELECT DKlineups.LineupId, DKRanks.Name, DKRanks.Team
  FROM DKlineups
  JOIN DKRanks ON DKlineups.FullName = DKRanks.Name
  WHERE DKRanks.Position &lt;&gt; 'QB') AS NonQBs
ON QBs.LineupId = NonQBs.LineupId AND QBs.Team = NonQBs.Team
GROUP BY QBs.Name, NonQBs.Name
ORDER BY PairCount DESC;


SELECT *
FROM DKrankscomp AS t1
LEFT JOIN DKRanks AS t2 ON t1.Name = t2.Name
WHERE t2.Name IS NULL;


SELECT DISTINCT tournamentKey
FROM DKcontests;



ALTER TABLE DKcontests ADD COLUMN entryfee INTEGER;


UPDATE DKcontests
SET entryfee = '3'
WHERE tournamentKey = '88C3E6F74CBD11EEAFAF0AC491C7D7CB';</sql><current_tab id="0"/></tab_sql></sqlb_project>
